var modalSelectTemplates=modalSelectTemplates||{};modalSelectTemplates["modal-template-multiple.html"]=' <ion-modal-view class="ionic-select-modal" ng-class="::ui.modalClass">\n    <ion-header-bar ng-class="::ui.headerFooterClass">\n      <h1 class="title">{{::ui.modalTitle}} MULTIPLE</h1>\n    </ion-header-bar>\n    <ion-content>\n\n    <div ng-if="!ui.shortList">\n        <div class="text-center" ng-if="!showList" style="padding-top:40px;">\n            <h4 class="muted">{{::ui.loadListMessage}}</h4>\n            <p>\n                <ion-spinner></ion-spinner>\n            </p>\n        </div>\n        <div class="list" ng-if="showList" class="animate-if">\n            <div class="item item-text-wrap" collection-repeat="option in options track by $index" ng-click="setOption(option)" ng-class="{\'{{::ui.selectedClass}}\': getSelectedValue(option) == ui.value}"> \n                <div compile="inner" compile-once="true"></div>\n            </div>\n        </div>\n    </div>\n    <div ng-if="ui.shortList">\n        <div class="list">\n            <div class="item item-checkbox" ng-repeat="option in options track by $index">\n                <label class="checkbox">\n                    <input type="checkbox" ng-model="isChecked[$index]">\n                </label>\n                <div compile="inner" compile-once="true"></div>\n            </div>\n        </div>\n    </div>\n    </ion-content>\n    <ion-footer-bar ng-class="::ui.headerFooterClass">\n        <button class="button button-stable" ng-click="closeModal()">{{ui.cancelButton}}</button>\n        <h2 class="title"><button class="button">OK</button></h2>\n        <button ng-if="::!ui.hideReset" class="button button-stable" ng-click="unsetValue()">{{ui.resetButton}}</button>\n    </ion-footer-bar>\n</ion-modal-view>\n';var modalSelectTemplates=modalSelectTemplates||{};modalSelectTemplates["modal-template.html"]=' <ion-modal-view class="ionic-select-modal" ng-class="::ui.modalClass">\n    <ion-header-bar ng-class="::ui.headerFooterClass">\n      <h1 class="title">{{::ui.modalTitle}}</h1>\n    </ion-header-bar>\n\n    <div class="bar bar-subheader item-input-inset" ng-class="::ui.subHeaderClass" ng-if="ui.hasSearch">\n      <label class="item-input-wrapper">\n        <i class="icon ion-ios-search placeholder-icon"></i>\n        <input type="search" placeholder="Search" ng-model="ui.searchValue">\n      </label>\n      <button class="button button-clear" ng-click="clearSearch()">\n        {{ ui.cancelSearchButton }}\n      </button>\n    </div>\n\n    <ion-content class="has-header" ng-class="{\'has-subheader\':ui.hasSearch}">\n\n    <div ng-if="!ui.shortList">\n        <div class="text-center" ng-if="!showList" style="padding-top:40px;">\n            <h4 class="muted">{{::ui.loadListMessage}}</h4>\n            <p>\n                <ion-spinner></ion-spinner>\n            </p>\n        </div>\n        <div class="list" ng-if="showList" class="animate-if">\n            <div class="item item-text-wrap" collection-repeat="option in options track by $index" ng-click="setOption(option)" ng-class="{\'{{::ui.selectedClass}}\': compareValues(getSelectedValue(option), ui.value) }"> \n                <div compile="inner" compile-once="true"></div>\n            </div>\n        </div>\n    </div>\n    <div ng-if="ui.shortList">\n        <div class="list">\n            <div class="item item-text-wrap" ng-repeat="option in options track by $index" ng-click="setOption(option)" ng-class="{\'{{::ui.selectedClass}}\': compareValues(getSelectedValue(option), ui.value) }">\n                <div compile="inner" compile-once="true"></div>\n            </div>\n        </div>\n    </div>\n    </ion-content>\n    <ion-footer-bar ng-class="::ui.headerFooterClass">\n        <button class="button button-stable modal-select-close-button" ng-click="closeModal()">{{ui.cancelButton}}</button>\n        <button ng-if="::!ui.hideReset" class="button button-stable" ng-click="unsetValue()">{{ui.resetButton}}</button>\n    </ion-footer-bar>\n\n</ion-modal-view>\n',function(){angular.module("ionic-modal-select",[]).directive("compile",["$compile",function(e){return function(t,n,i){var o=t.$watch(function(e){return e.$eval(i.compile)},function(l){n.html(l),e(n.contents())(t),"true"===i.compileOnce&&o()})}}]).directive("modalSelect",["$ionicModal","$timeout","$filter",function(e,t,n){return{restrict:"A",require:"ngModel",scope:{initialOptions:"=options",optionGetter:"&",onSelect:"&"},link:function(i,o,l,a,s){var c,r=l.shortListBreak?parseInt(l.shortListBreak):10,u=l.optionProperty,d=l.optionGetter,p=l.multiple?!0:!1;p&&(i.checkedItems=[]),i.ui={modalTitle:l.modalTitle||"Select an option",okButton:l.okButton||"OK",hideReset:"true"!==l.hideReset?!1:!0,resetButton:l.okButton||"Reset",cancelButton:l.cancelButton||"Cancel",loadListMessage:l.loadListMessage||"Loading",modalClass:l.modalClass||"",headerFooterClass:l.headerFooterClass||"bar-stable",value:null,selectedClass:l.selectedClass||"option-selected",hasSearch:"true"!==l.hasSearch?!1:!0,searchValue:"",subHeaderClass:l.subHeaderClass||"bar-stable",cancelSearchButton:l.cancelSearchButton||"Cancel"};var m=angular.copy(i.initialOptions);i.options=m,i.$watch("initialOptions",function(e){m=angular.copy(i.initialOptions),i.options=angular.copy(e)});var h=o[0].querySelector(".option");if(!h)throw new Error({name:"modalSelectError:noOptionTemplate",message:'When using modalSelect directive you must include an element with class "option" to provide a template for your select options.',toString:function(){return this.name+" "+this.message}});i.inner=angular.element(h).html(),"remove"in Element.prototype||(Element.prototype.remove=function(){this.parentNode.removeChild(this)}),angular.element(h).remove(),c="true"===l.useCollectionRepeat?!1:"false"===l.useCollectionRepeat?!0:i.options.length<r,i.ui.shortList=c,a.$render=function(){i.ui.value=a.$viewValue};var v=i.getSelectedValue=function(e){if(!e)return null;if(d){var t=i.optionGetter({option:e});return t}return u?val=e[u]:val=e,val};i.setOption=function(e){var t=a.$viewValue,n=v(e);a.$setViewValue(n),a.$render(),i.closeModal(),i.onSelect&&i.onSelect({newValue:n,oldValue:t})},i.unsetValue=function(){t(function(){a.$setViewValue(""),a.$render(),i.modal.hide(),i.showList=!1})},i.closeModal=function(){i.modal.hide().then(function(){i.showList=!1})},i.compareValues=function(e,t){return angular.equals(e,t)};var b=p?"modal-template-multiple.html":"modal-template.html";i.modal=e.fromTemplate(modalSelectTemplates[b],{scope:i}),i.$on("$destroy",function(){i.modal.remove()}),o.on("click",function(){c?(i.showList=!0,i.modal.show()):i.modal.show().then(function(){i.showList=!0})}),i.ui.hasSearch&&(i.$watch("ui.searchValue",function(e){i.options=n("filter")(m,e)}),i.clearSearch=function(){i.ui.searchValue=""}),a.$render()}}}])}();